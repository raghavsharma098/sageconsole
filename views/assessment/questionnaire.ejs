<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Sustainability Assessment Platform</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .assessment-hero {
            background: linear-gradient(135deg, #065f46 0%, #059669 50%, #22d3ee 100%);
            color: white;
            padding: 3rem 0;
            margin-bottom: 2rem;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            position: relative;
            overflow: hidden;
        }
        
        .assessment-hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="1"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            opacity: 0.3;
        }
        
        .assessment-hero .content {
            position: relative;
            z-index: 1;
            text-align: center;
        }
        
        .assessment-hero h1 {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            font-weight: 700;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }
        
        .assessment-hero p {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            opacity: 0.9;
        }
        
        .assessment-id {
            display: inline-block;
            background: rgba(255,255,255,0.2);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-family: 'Courier New', monospace;
            font-weight: bold;
            margin-top: 1rem;
            backdrop-filter: blur(10px);
        }
        
        .question-section {
            margin-bottom: 3rem;
        }
        
        .section-title {
            display: flex;
            align-items: center;
            gap: 1rem;
            font-size: 1.8rem;
            color: #065f46;
            margin-bottom: 2rem;
            padding: 1rem 0;
            border-bottom: 3px solid #059669;
            position: relative;
        }
        
        .section-title::before {
            content: '';
            width: 40px;
            height: 40px;
            background: linear-gradient(135deg, #059669, #22d3ee);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
        }
        
        .section-title.general::before {
            content: 'üåç';
        }
        
        .section-title.industry::before {
            content: 'üè¢';
        }
        
        .question-card {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 5px 20px rgba(0,0,0,0.08);
            border: 1px solid #e0e7e3;
            transition: all 0.3s ease;
            position: relative;
        }
        
        .question-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.12);
        }
        
        .question-number {
            position: absolute;
            top: -10px;
            left: 20px;
            background: linear-gradient(135deg, #059669, #22d3ee);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: bold;
            box-shadow: 0 3px 10px rgba(74, 124, 89, 0.3);
        }
        
        .question-text {
            font-size: 1.1rem;
            font-weight: 600;
            color: #2c3e50;
            margin: 1rem 0 1.5rem 0;
            line-height: 1.6;
        }
        
        .required {
            color: #e74c3c;
            font-size: 1.2rem;
            margin-left: 0.3rem;
        }
        
        .form-control, .form-select {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid #e0e7e3;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #fafbfc;
        }
        
        .form-control:focus, .form-select:focus {
            outline: none;
            border-color: #059669;
            box-shadow: 0 0 0 3px rgba(74, 124, 89, 0.1);
            background: white;
        }
        
        .radio-group, .checkbox-group {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-top: 1rem;
        }
        
        .radio-item, .checkbox-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            background: #ecfdf5;
            border: 2px solid #e0e7e3;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .radio-item:hover, .checkbox-item:hover {
            background: #d1fae5;
            border-color: #059669;
        }
        
        .radio-item input, .checkbox-item input {
            margin-right: 0.75rem;
            transform: scale(1.2);
        }
        
        .radio-item label, .checkbox-item label {
            cursor: pointer;
            flex: 1;
            font-weight: 500;
        }
        
        .file-upload {
            border: 3px dashed #059669;
            border-radius: 15px;
            padding: 2rem;
            text-align: center;
            background: #ecfdf5;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .file-upload:hover, .file-upload.dragover {
            background: #d1fae5;
            border-color: #065f46;
        }
        
        .file-upload input[type="file"] {
            display: none;
        }
        
        .file-upload-icon {
            font-size: 3rem;
            color: #059669;
            margin-bottom: 1rem;
        }
        
        .form-actions {
            background: linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%);
            border-radius: 15px;
            padding: 2rem;
            margin-top: 3rem;
            box-shadow: 0 5px 20px rgba(0,0,0,0.08);
        }
        
        .btn {
            padding: 0.75rem 2rem;
            border: none;
            border-radius: 25px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #059669, #22d3ee);
            color: white;
        }
        
        .btn-secondary {
            background: linear-gradient(135deg, #6c757d, #868e96);
            color: white;
        }
        
        .btn-warning {
            background: linear-gradient(135deg, #ffc107, #ffda6a);
            color: #212529;
        }
        
        .progress-indicator {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 1rem;
            margin: 2rem 0;
            padding: 1rem;
            background: white;
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
        }
        
        .progress-step {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            background: #ecfdf5;
            border: 2px solid #e0e7e3;
            font-weight: 600;
        }
        
        .progress-step.active {
            background: #059669;
            color: white;
            border-color: #059669;
        }
        
        @media (max-width: 768px) {
            .assessment-hero h1 {
                font-size: 2rem;
            }
            
            .radio-group, .checkbox-group {
                grid-template-columns: 1fr;
            }
            
            .form-actions {
                text-align: center;
            }
            
            .form-actions .btn {
                width: 100%;
                margin-bottom: 1rem;
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/header') %>
    
    <main class="main-content">
        <div class="container">
            <!-- Enhanced Assessment Header -->
            <div class="assessment-hero">
                <div class="content">
                    <h1><i class="fas fa-leaf"></i> Sustainability Assessment</h1>
                    <p>Complete the questionnaire to generate your comprehensive sustainability report</p>
                    <div class="assessment-id">
                        <i class="fas fa-id-card"></i> Assessment ID: <strong><%= assessment.assessmentId %></strong>
                    </div>
                </div>
            </div>

            <!-- Progress Indicator -->
            <div class="progress-indicator">
                <div class="progress-step active">
                    <i class="fas fa-clipboard-list"></i>
                    <span>Assessment</span>
                </div>
                <div class="progress-step">
                    <i class="fas fa-chart-line"></i>
                    <span>Analysis</span>
                </div>
                <div class="progress-step">
                    <i class="fas fa-file-alt"></i>
                    <span>Report</span>
                </div>
            </div>

            <form id="assessmentForm" method="POST" action="/assessment/save" enctype="multipart/form-data">
                <!-- General Questions Section -->
                <div class="question-section">
                    <h2 class="section-title general">General Sustainability Questions</h2>
                    
                    <% questions.general.forEach((question, index) => { %>
                        <div class="question-card">
                            <div class="question-number">Question <%= index + 1 %></div>
                            <div class="question-text">
                                <%= question.question %>
                                <% if (question.requiresDocument) { %>
                                    <span class="required">*</span>
                                <% } %>
                            </div>
                            
                            <% if (question.type === 'multiple-choice' || question.type === 'select' || question.type === 'yes-no') { %>
                                <div class="radio-group">
                                    <% question.options.forEach(option => { %>
                                        <div class="radio-item">
                                            <input type="radio" 
                                                   id="general_<%= question.id %>_<%= option.replace(/\s+/g, '_') %>" 
                                                   name="general_<%= question.id %>" 
                                                   value="<%= option %>"
                                                   <%= assessment.generalAnswers && assessment.generalAnswers.get(question.id) === option ? 'checked' : '' %>
                                                   <%= question.requiresDocument ? 'required' : '' %>>
                                            <label for="general_<%= question.id %>_<%= option.replace(/\s+/g, '_') %>"><%= option %></label>
                                        </div>
                                    <% }) %>
                                </div>
                            
                            <% } else if (question.type === 'multiple-select' || question.type === 'checkbox' || question.allowMultiple) { %>
                                <div class="checkbox-group">
                                    <% question.options.forEach(option => { %>
                                        <div class="checkbox-item">
                                            <input type="checkbox" 
                                                   id="general_<%= question.id %>_<%= option.replace(/\s+/g, '_') %>" 
                                                   name="general_<%= question.id %>[]" 
                                                   value="<%= option %>"
                                                   <%= assessment.generalAnswers && assessment.generalAnswers.get(question.id) && assessment.generalAnswers.get(question.id).includes(option) ? 'checked' : '' %>>
                                            <label for="general_<%= question.id %>_<%= option.replace(/\s+/g, '_') %>"><%= option %></label>
                                        </div>
                                    <% }) %>
                                </div>
                            
                            <% } else if (question.type === 'text') { %>
                                <input type="text" 
                                       name="general_<%= question.id %>" 
                                       class="form-control" 
                                       placeholder="<%= question.placeholder || '' %>"
                                       value="<%= assessment.generalAnswers && assessment.generalAnswers.get(question.id) || '' %>"
                                       <%= question.requiresDocument ? 'required' : '' %>>
                            
                            <% } else if (question.type === 'file-upload' || question.type === 'file') { %>
                                <div class="file-upload">
                                    <input type="file" 
                                           name="general_<%= question.id %>" 
                                           id="general_<%= question.id %>_file" 
                                           accept=".pdf,.doc,.docx,.jpg,.jpeg,.png,.txt"
                                           <%= question.requiresDocument ? 'required' : '' %>>
                                    <label for="general_<%= question.id %>_file">
                                        <div class="file-upload-icon">
                                            <i class="fas fa-cloud-upload-alt"></i>
                                        </div>
                                        <div style="font-size: 1.1rem; font-weight: 600; margin-bottom: 0.5rem;">
                                            <i class="fas fa-mouse-pointer"></i> Click to select file or drag and drop
                                        </div>
                                        <div style="font-size: 0.9rem; color: #666; opacity: 0.8;">
                                            <i class="fas fa-info-circle"></i> Accepted formats: PDF, DOC, DOCX, JPG, PNG, TXT (Max 10MB)
                                        </div>
                                    </label>
                                    <% if (assessment.uploadedDocument && assessment.uploadedDocument.originalName) { %>
                                        <div style="margin-top: 1.5rem; padding: 1rem; background: linear-gradient(135deg, #d1fae5, #d4edda); border-radius: 10px; border-left: 4px solid #059669;">
                                            <i class="fas fa-check-circle" style="color: #059669;"></i>
                                            <strong>Currently uploaded:</strong> <%= assessment.uploadedDocument.originalName %>
                                        </div>
                                    <% } %>
                                </div>
                            <% } %>
                        </div>
                    <% }) %>
                </div>

                <!-- Industry-Specific Questions Section -->
                <div class="question-section">
                    <h2 class="section-title industry"><%= company.industry %> Industry Specific Questions</h2>
                    
                    <% questions.industry.forEach((question, index) => { %>
                        <div class="question-card">
                            <div class="question-number">Industry Question <%= index + 1 %></div>
                            <div class="question-text">
                                <%= question.question %>
                                <% if (question.requiresDocument) { %>
                                    <span class="required">*</span>
                                <% } %>
                            </div>
                            
                            <% if (question.type === 'multiple-choice' || question.type === 'select' || question.type === 'yes-no') { %>
                                <div class="radio-group">
                                    <% question.options.forEach(option => { %>
                                        <div class="radio-item">
                                            <input type="radio" 
                                                   id="niche_<%= question.id %>_<%= option.replace(/\s+/g, '_') %>" 
                                                   name="niche_<%= question.id %>" 
                                                   value="<%= option %>"
                                                   <%= assessment.nicheSpecificAnswers && assessment.nicheSpecificAnswers.get(question.id) === option ? 'checked' : '' %>
                                                   <%= question.requiresDocument ? 'required' : '' %>>
                                            <label for="niche_<%= question.id %>_<%= option.replace(/\s+/g, '_') %>"><%= option %></label>
                                        </div>
                                    <% }) %>
                                </div>
                            
                            <% } else if (question.type === 'multiple-select' || question.type === 'checkbox' || question.allowMultiple) { %>
                                <div class="checkbox-group">
                                    <% question.options.forEach(option => { %>
                                        <div class="checkbox-item">
                                            <input type="checkbox" 
                                                   id="niche_<%= question.id %>_<%= option.replace(/\s+/g, '_') %>" 
                                                   name="niche_<%= question.id %>[]" 
                                                   value="<%= option %>"
                                                   <%= assessment.nicheSpecificAnswers && assessment.nicheSpecificAnswers.get(question.id) && assessment.nicheSpecificAnswers.get(question.id).includes(option) ? 'checked' : '' %>>
                                            <label for="niche_<%= question.id %>_<%= option.replace(/\s+/g, '_') %>"><%= option %></label>
                                        </div>
                                    <% }) %>
                                </div>
                            
                            <% } else if (question.type === 'text') { %>
                                <input type="text" 
                                       name="niche_<%= question.id %>" 
                                       class="form-control" 
                                       placeholder="<%= question.placeholder || '' %>"
                                       value="<%= assessment.nicheSpecificAnswers && assessment.nicheSpecificAnswers.get(question.id) || '' %>"
                                       <%= question.requiresDocument ? 'required' : '' %>>
                            
                            <% } else if (question.type === 'file-upload' || question.type === 'file') { %>
                                <div class="file-upload">
                                    <input type="file" 
                                           name="niche_<%= question.id %>" 
                                           id="niche_<%= question.id %>_file" 
                                           accept=".pdf,.doc,.docx,.jpg,.jpeg,.png,.txt"
                                           <%= question.requiresDocument ? 'required' : '' %>>
                                    <label for="niche_<%= question.id %>_file">
                                        <div class="file-upload-icon">
                                            <i class="fas fa-cloud-upload-alt"></i>
                                        </div>
                                        <div style="font-size: 1.1rem; font-weight: 600; margin-bottom: 0.5rem;">
                                            <i class="fas fa-mouse-pointer"></i> Click to select file or drag and drop
                                        </div>
                                        <div style="font-size: 0.9rem; color: #666; opacity: 0.8;">
                                            <i class="fas fa-info-circle"></i> Accepted formats: PDF, DOC, DOCX, JPG, PNG, TXT (Max 10MB)
                                        </div>
                                    </label>
                                    <% if (assessment.uploadedDocument && assessment.uploadedDocument.originalName) { %>
                                        <div style="margin-top: 1.5rem; padding: 1rem; background: linear-gradient(135deg, #d1fae5, #d4edda); border-radius: 10px; border-left: 4px solid #059669;">
                                            <i class="fas fa-check-circle" style="color: #059669;"></i>
                                            <strong>Currently uploaded:</strong> <%= assessment.uploadedDocument.originalName %>
                                        </div>
                                    <% } %>
                                </div>
                            <% } %>
                        </div>
                    <% }) %>
                </div>

                <!-- Form Actions -->
                <div class="form-actions">
                    <div style="display: flex; gap: 1rem; justify-content: center; flex-wrap: wrap;">
                        <button type="button" id="saveBtn" class="btn btn-secondary">
                            <i class="fas fa-save"></i> Save Progress
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-paper-plane"></i> Submit Assessment
                        </button>
                        <a href="/dashboard" class="btn btn-warning">
                            <i class="fas fa-arrow-left"></i> Back to Dashboard
                        </a>
                    </div>
                    <div style="text-align: center; margin-top: 1.5rem; font-size: 0.9rem; color: #666;">
                        <i class="fas fa-shield-alt"></i> Your data is encrypted and secure
                    </div>
                </div>
            </form>
        </div>
    </main>
    
    <%- include('../partials/footer') %>
    
    <script src="/js/main.js"></script>
    <script>
        // File upload drag and drop functionality
        const fileUpload = document.querySelector('.file-upload');
        const fileInput = document.getElementById('document');

        if (fileUpload && fileInput) {
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                fileUpload.addEventListener(eventName, preventDefaults, false);
                document.body.addEventListener(eventName, preventDefaults, false);
            });

            ['dragenter', 'dragover'].forEach(eventName => {
                fileUpload.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                fileUpload.addEventListener(eventName, unhighlight, false);
            });

            fileUpload.addEventListener('drop', handleDrop, false);

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            function highlight(e) {
                fileUpload.classList.add('dragover');
            }

            function unhighlight(e) {
                fileUpload.classList.remove('dragover');
            }

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                fileInput.files = files;
            }
        }

        // Save progress functionality
        document.getElementById('saveBtn').addEventListener('click', function() {
            const formData = new FormData(document.getElementById('assessmentForm'));
            
            // Show loading state
            const saveBtn = this;
            const originalText = saveBtn.textContent;
            saveBtn.textContent = 'Saving...';
            saveBtn.disabled = true;
            
            fetch('/assessment/save', {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    alert('Progress saved successfully!');
                } else {
                    alert('Error saving progress: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Save error:', error);
                alert('Error saving progress: ' + error.message);
            })
            .finally(() => {
                saveBtn.textContent = originalText;
                saveBtn.disabled = false;
            });
        });

        // Form submission
        document.getElementById('assessmentForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Add submit status
            const formData = new FormData(this);
            formData.append('submit', 'true');
            
            // Show loading
            const submitBtn = this.querySelector('[type="submit"]');
            const originalText = submitBtn.textContent;
            submitBtn.textContent = 'Submitting...';
            submitBtn.disabled = true;
            
            fetch('/assessment/save', {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    if (data.redirect) {
                        window.location.href = data.redirect;
                    } else {
                        alert('Assessment submitted successfully!');
                        window.location.href = '/dashboard';
                    }
                } else {
                    alert('Error submitting assessment: ' + (data.error || 'Unknown error'));
                    submitBtn.textContent = originalText;
                    submitBtn.disabled = false;
                }
            })
            .catch(error => {
                console.error('Submission error:', error);
                alert('Error submitting assessment: ' + error.message);
                submitBtn.textContent = originalText;
                submitBtn.disabled = false;
            });
        });
    </script>
</body>
</html>
