<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Sustainability Assessment Platform</title>
    <link rel="stylesheet" href="/css/styles.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <%- include('../partials/header') %>
    
    <main class="main-content">
        <div class="container">
            <!-- Report Header -->
            <div class="report-header">
                <h1>Sustainability Assessment Report</h1>
                <p style="font-size: 1.1rem; margin-bottom: 1rem;">
                    Company: <strong><%= company.companyName %></strong> | 
                    Industry: <strong><%= company.industry %></strong>
                </p>
                <p>Report ID: <strong><%= report.reportId %></strong></p>
                <p>Generated on: <strong><%= new Date(report.generatedDate).toLocaleDateString() %></strong></p>
                
                <!-- Compliance Score Circle -->
                <div class="score-circle" style="--score-deg: <%= (report.reportData.complianceScore / 100) * 360 %>deg;">
                    <span class="score-text"><%= report.reportData.complianceScore %>%</span>
                </div>
                <h3 style="margin-top: 1rem;">Overall Compliance Score</h3>
            </div>

            <!-- Report Actions -->
            <div class="card">
                <div style="display: flex; gap: 1rem; justify-content: center; flex-wrap: wrap;">
                    <a href="/reports/download/<%= report.reportId %>" class="btn btn-primary">üì• Download PDF Report</a>
                    <a href="/reports/pdf/<%= report.reportId %>" target="_blank" class="btn btn-success">üëÅÔ∏è View PDF Report</a>
                    <a href="/reports/regenerate" class="btn btn-warning">üîÑ Regenerate Report</a>
                    <a href="/dashboard" class="btn btn-secondary">üè† Back to Dashboard</a>
                    <a href="/assessment" class="btn btn-info">üîÑ Retake Assessment</a>
                </div>
            </div>

            <!-- Executive Summary -->
            <div class="card report-section">
                <div class="section-header">
                    <h2>üìä Executive Summary</h2>
                </div>
                <p style="font-size: 1.1rem; line-height: 1.8;"><%= report.reportData.summary %></p>
            </div>

            <!-- Assessment Analytics Chart -->
            <div class="card report-section">
                <div class="section-header">
                    <h2>üìà Assessment Analytics</h2>
                    <p style="margin: 0; font-weight: normal; color: #666;">Visual breakdown of your sustainability responses</p>
                </div>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1.5rem; margin-top: 1rem;">
                    <!-- Question Categories Pie Chart -->
                    <div style="text-align: center;">
                        <h3 style="margin-bottom: 0.75rem; color: #065f46; font-size: 1.1rem;">Question Categories</h3>
                        <div style="position: relative; height: 250px; width: 100%;">
                            <canvas id="categoriesChart" style="max-width: 100%; max-height: 100%;"></canvas>
                        </div>
                        <p style="margin-top: 0.75rem; font-size: 0.85rem; color: #666;">Distribution by category</p>
                    </div>
                    
                    <!-- Response Quality Pie Chart -->
                    <div style="text-align: center;">
                        <h3 style="margin-bottom: 0.75rem; color: #065f46; font-size: 1.1rem;">Response Quality</h3>
                        <div style="position: relative; height: 250px; width: 100%;">
                            <canvas id="qualityChart" style="max-width: 100%; max-height: 100%;"></canvas>
                        </div>
                        <p style="margin-top: 0.75rem; font-size: 0.85rem; color: #666;">Quality assessment</p>
                    </div>
                </div>
                
                <!-- Summary Statistics -->
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); gap: 0.75rem; margin-top: 1.25rem; padding-top: 1.25rem; border-top: 2px solid #d1fae5;">
                    <div style="text-align: center; padding: 0.75rem; background: linear-gradient(135deg, #ecfdf5, #d1fae5); border-radius: 8px;">
                        <div style="font-size: 1.75rem; font-weight: bold; color: #065f46;" id="totalQuestions">-</div>
                        <div style="font-size: 0.8rem; color: #666;">Total Questions</div>
                    </div>
                    <div style="text-align: center; padding: 0.75rem; background: linear-gradient(135deg, #ecfdf5, #d1fae5); border-radius: 8px;">
                        <div style="font-size: 1.75rem; font-weight: bold; color: #059669;" id="generalQuestions">-</div>
                        <div style="font-size: 0.8rem; color: #666;">General Questions</div>
                    </div>
                    <div style="text-align: center; padding: 0.75rem; background: linear-gradient(135deg, #ecfdf5, #d1fae5); border-radius: 8px;">
                        <div style="font-size: 1.75rem; font-weight: bold; color: #10b981;" id="industryQuestions">-</div>
                        <div style="font-size: 0.8rem; color: #666;">Industry-Specific</div>
                    </div>
                    <div style="text-align: center; padding: 0.75rem; background: linear-gradient(135deg, #ecfdf5, #d1fae5); border-radius: 8px;">
                        <div style="font-size: 1.75rem; font-weight: bold; color: #22d3ee;" id="highQualityResponses">-</div>
                        <div style="font-size: 0.8rem; color: #666;">High-Quality Responses</div>
                    </div>
                </div>
            </div>

            <!-- Industry Observations -->
            <div class="card report-section">
                <div class="section-header">
                    <h2>üè≠ Industry-Specific Observations</h2>
                </div>
                <p style="font-size: 1.1rem; line-height: 1.8;"><%= report.reportData.industryObservations %></p>
            </div>

            <!-- Strengths and Weak Areas -->
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin-bottom: 2rem;">
                <!-- Strengths -->
                <div class="card report-section">
                    <div class="section-header">
                        <h2>‚úÖ Strengths</h2>
                    </div>
                    <% if (report.reportData.strengths && report.reportData.strengths.length > 0) { %>
                        <ul class="recommendations-list">
                            <% report.reportData.strengths.forEach(strength => { %>
                                <li><%= strength %></li>
                            <% }) %>
                        </ul>
                    <% } else { %>
                        <p>Continue your sustainability journey to build on your strengths.</p>
                    <% } %>
                </div>

                <!-- Weak Areas -->
                <div class="card report-section">
                    <div class="section-header">
                        <h2>‚ö†Ô∏è Areas for Improvement</h2>
                    </div>
                    <% if (report.reportData.weakAreas && report.reportData.weakAreas.length > 0) { %>
                        <ul class="weak-areas-list">
                            <% report.reportData.weakAreas.forEach(weakness => { %>
                                <li><%= weakness %></li>
                            <% }) %>
                        </ul>
                    <% } else { %>
                        <p>Great job! No major areas of concern identified.</p>
                    <% } %>
                </div>
            </div>

            <!-- AI-Powered Recommendations -->
            <div class="card report-section">
                <div class="section-header">
                    <h2>ü§ñ AI-Powered Recommendations</h2>
                    <p style="margin: 0; font-weight: normal; color: #666;">
                        Priority Level: 
                        <% if (report.aiSuggestions.priorityLevel === 'Critical') { %>
                            <span style="font-weight: bold; color: #dc3545;"><%= report.aiSuggestions.priorityLevel %></span>
                        <% } else if (report.aiSuggestions.priorityLevel === 'High') { %>
                            <span style="font-weight: bold; color: #fd7e14;"><%= report.aiSuggestions.priorityLevel %></span>
                        <% } else if (report.aiSuggestions.priorityLevel === 'Medium') { %>
                            <span style="font-weight: bold; color: #ffc107;"><%= report.aiSuggestions.priorityLevel %></span>
                        <% } else { %>
                            <span style="font-weight: bold; color: #28a745;"><%= report.aiSuggestions.priorityLevel %></span>
                        <% } %>
                    </p>
                    
                    <!-- Source Indicator -->
                    <% if (report.aiSuggestions.source) { %>
                        <p style="margin: 0.5rem 0 0 0; font-size: 0.8rem; color: #666;">
                            <% if (report.aiSuggestions.source === 'ai') { %>
                                <span style="color: #28a745; font-weight: bold;">‚úÖ AI Generated</span>
                                <% if (report.aiSuggestions.model) { %>
                                    (Model: <%= report.aiSuggestions.model %>)
                                <% } %>
                            <% } else { %>
                                <span style="color: #ffc107; font-weight: bold;">‚ö†Ô∏è Fallback Recommendations</span>
                                <% if (report.aiSuggestions.error) { %>
                                    (AI unavailable: <%= report.aiSuggestions.error.substring(0, 50) %>...)
                                <% } %>
                            <% } %>
                            <% if (report.aiSuggestions.timestamp) { %>
                                | Generated: <%= new Date(report.aiSuggestions.timestamp).toLocaleString() %>
                            <% } %>
                        </p>
                    <% } %>
                </div>
                
                <!-- Improvement Suggestions -->
                <h3 style="margin-bottom: 1rem; color: #059669;">üí° Improvement Suggestions</h3>
                <% if (report.aiSuggestions.improvements && report.aiSuggestions.improvements.length > 0) { %>
                    <ul class="recommendations-list">
                        <% report.aiSuggestions.improvements.forEach(improvement => { %>
                            <li><%= improvement %></li>
                        <% }) %>
                    </ul>
                <% } else { %>
                    <p>No specific improvements identified at this time.</p>
                <% } %>

                <!-- Best Practices -->
                <h3 style="margin: 2rem 0 1rem 0; color: #059669;">üåü Industry Best Practices</h3>
                <% if (report.aiSuggestions.bestPractices && report.aiSuggestions.bestPractices.length > 0) { %>
                    <ul class="recommendations-list">
                        <% report.aiSuggestions.bestPractices.forEach(practice => { %>
                            <li><%= practice %></li>
                        <% }) %>
                    </ul>
                <% } else { %>
                    <p>Continue following industry standards for sustainability.</p>
                <% } %>

                <!-- Action Items -->
                <h3 style="margin: 2rem 0 1rem 0; color: #059669;">üéØ Priority Action Items</h3>
                <% if (report.aiSuggestions.actionItems && report.aiSuggestions.actionItems.length > 0) { %>
                    <ul class="weak-areas-list">
                        <% report.aiSuggestions.actionItems.forEach(action => { %>
                            <li><%= action %></li>
                        <% }) %>
                    </ul>
                <% } else { %>
                    <p>Keep up the good work! No urgent action items identified.</p>
                <% } %>
            </div>

            <!-- General Recommendations -->
            <div class="card report-section">
                <div class="section-header">
                    <h2>üìã General Recommendations</h2>
                </div>
                <% if (report.reportData.recommendations && report.reportData.recommendations.length > 0) { %>
                    <ul class="recommendations-list">
                        <% report.reportData.recommendations.forEach(recommendation => { %>
                            <li><%= recommendation %></li>
                        <% }) %>
                    </ul>
                <% } else { %>
                    <p>Continue your sustainability journey with regular assessments and improvements.</p>
                <% } %>
            </div>

            <!-- Assessment Details -->
            <div class="card report-section">
                <div class="section-header">
                    <h2>üìù Assessment Details</h2>
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem;">
                    <div>
                        <h4 style="margin-bottom: 1rem;">Assessment Information</h4>
                        <div class="info-row">
                            <span class="info-label">Assessment ID:</span>
                            <span class="info-value"><%= assessment.assessmentId %></span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Submission Date:</span>
                            <span class="info-value"><%= new Date(assessment.submissionDate).toLocaleDateString() %></span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Status:</span>
                            <span class="info-value"><%= assessment.status %></span>
                        </div>
                    </div>
                    
                    <div>
                        <h4 style="margin-bottom: 1rem;">Report Information</h4>
                        <div class="info-row">
                            <span class="info-label">Report ID:</span>
                            <span class="info-value"><%= report.reportId %></span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Generated:</span>
                            <span class="info-value"><%= new Date(report.generatedDate).toLocaleDateString() %></span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Downloads:</span>
                            <span class="info-value"><%= report.downloadCount %></span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Next Steps -->
            <div class="card text-center" style="background: linear-gradient(135deg, #059669, #065f46); color: white;">
                <h2 style="margin-bottom: 1rem;">üöÄ Next Steps</h2>
                <p style="font-size: 1.1rem; margin-bottom: 2rem;">
                    Use these insights to enhance your sustainability practices. Consider retaking the assessment 
                    after implementing improvements to track your progress.
                </p>
                
                <div style="display: flex; gap: 1rem; justify-content: center; flex-wrap: wrap;">
                    <a href="/assessment" class="btn btn-lg" style="background-color: white; color: #065f46;">Update Assessment</a>
                    <a href="/dashboard" class="btn btn-lg btn-secondary">Return to Dashboard</a>
                </div>
            </div>
        </div>
    </main>
    
    <%- include('../partials/footer') %>
    
    <script src="/js/main.js"></script>
    <script>
        // Print functionality
        function printReport() {
            window.print();
        }
        
        // Assessment data from server
        const assessmentData = {
            generalAnswers: <%- JSON.stringify(Object.fromEntries(assessment.generalAnswers || [])) %>,
            nicheAnswers: <%- JSON.stringify(Object.fromEntries(assessment.nicheSpecificAnswers || [])) %>
        };
        
        // Generate pie charts - simplified version
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(() => {
                generateCharts();
            }, 500); // Delay to ensure page is fully loaded
        });
        
        function generateCharts() {
            try {
                // Check if Chart.js is loaded
                if (typeof Chart === 'undefined') {
                    console.error('Chart.js not loaded');
                    showFallbackStats();
                    return;
                }
                
                const general = assessmentData.generalAnswers || {};
                const niche = assessmentData.nicheAnswers || {};
                
                const totalGeneral = Object.keys(general).length;
                const totalNiche = Object.keys(niche).length;
                const totalQuestions = totalGeneral + totalNiche;
                
                // Update summary statistics first
                document.getElementById('totalQuestions').textContent = totalQuestions;
                document.getElementById('generalQuestions').textContent = totalGeneral;
                document.getElementById('industryQuestions').textContent = totalNiche;
                
                // Only create charts if canvas elements exist
                const categoriesCanvas = document.getElementById('categoriesChart');
                const qualityCanvas = document.getElementById('qualityChart');
                
                if (categoriesCanvas) {
                    const categoriesCtx = categoriesCanvas.getContext('2d');
                    new Chart(categoriesCtx, {
                        type: 'pie',
                        data: {
                            labels: ['General Sustainability', 'Industry-Specific'],
                            datasets: [{
                                data: [totalGeneral, totalNiche],
                                backgroundColor: ['#059669', '#10b981'],
                                borderColor: ['#065f46', '#059669'],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            interaction: {
                                intersect: false
                            },
                            animation: {
                                duration: 0 // Disable animations to prevent scroll issues
                            },
                            plugins: {
                                legend: {
                                    position: 'bottom',
                                    labels: {
                                        padding: 10,
                                        font: { size: 10 }
                                    }
                                }
                            }
                        }
                    });
                }
                
                if (qualityCanvas) {
                    const qualityData = analyzeResponseQuality(general, niche);
                    document.getElementById('highQualityResponses').textContent = qualityData.highQuality;
                    
                    const qualityCtx = qualityCanvas.getContext('2d');
                    new Chart(qualityCtx, {
                        type: 'pie',
                        data: {
                            labels: ['High Quality', 'Medium Quality', 'Basic Response'],
                            datasets: [{
                                data: [qualityData.highQuality, qualityData.mediumQuality, qualityData.basicResponse],
                                backgroundColor: ['#22d3ee', '#10b981', '#6b7280'],
                                borderColor: ['#0891b2', '#059669', '#4b5563'],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            interaction: {
                                intersect: false
                            },
                            animation: {
                                duration: 0 // Disable animations
                            },
                            plugins: {
                                legend: {
                                    position: 'bottom',
                                    labels: {
                                        padding: 10,
                                        font: { size: 10 }
                                    }
                                }
                            }
                        }
                    });
                }
                
            } catch (error) {
                console.error('Chart generation error:', error);
                showFallbackStats();
            }
        }
        
        function showFallbackStats() {
            // Hide canvas containers and show text-only version
            const containers = document.querySelectorAll('canvas');
            containers.forEach(canvas => {
                if (canvas.parentElement) {
                    canvas.parentElement.innerHTML = '<p style="color: #666; padding: 2rem;">Charts unavailable - stats shown above</p>';
                }
            });
        }
        
        function analyzeResponseQuality(general, niche) {
            let highQuality = 0;
            let mediumQuality = 0;
            let basicResponse = 0;
            
            const scoreAnswer = (answer, isNiche = false) => {
                if (Array.isArray(answer)) {
                    // Handle array answers (checkboxes)
                    if (answer.length > 0 && !answer.includes('None')) {
                        if (answer.length >= 3) return 2; // High quality
                        else if (answer.length >= 1) return 1; // Medium quality
                    }
                    return 0; // Basic
                } else if (typeof answer === 'string') {
                    const lowerAnswer = answer.toLowerCase();
                    
                    // High quality indicators
                    if (lowerAnswer.includes('yes') || 
                        lowerAnswer.includes('comprehensive') ||
                        lowerAnswer.includes('high') ||
                        lowerAnswer.includes('fully') ||
                        lowerAnswer.includes('reduction') ||
                        lowerAnswer.includes('renewable') ||
                        lowerAnswer.includes('recycling') ||
                        lowerAnswer.includes('energy-efficient') ||
                        (isNiche && (lowerAnswer.includes('61-80') || lowerAnswer.includes('81-100')))) {
                        return 2;
                    }
                    
                    // Medium quality indicators
                    if (lowerAnswer.includes('partial') || 
                        lowerAnswer.includes('moderate') ||
                        lowerAnswer.includes('planning') ||
                        lowerAnswer.includes('development') ||
                        lowerAnswer.includes('in development') ||
                        (isNiche && (lowerAnswer.includes('41-60') || lowerAnswer.includes('21-40')))) {
                        return 1;
                    }
                }
                return 0;
            };
            
            // Analyze general answers
            Object.entries(general).forEach(([key, answer]) => {
                const score = scoreAnswer(answer, false);
                if (score === 2) highQuality++;
                else if (score === 1) mediumQuality++;
                else basicResponse++;
            });
            
            // Analyze niche answers
            Object.entries(niche).forEach(([key, answer]) => {
                const score = scoreAnswer(answer, true);
                if (score === 2) highQuality++;
                else if (score === 1) mediumQuality++;
                else basicResponse++;
            });
            
            return { highQuality, mediumQuality, basicResponse };
        }
    </script>
</body>
</html>
